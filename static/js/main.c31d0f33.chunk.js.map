{"version":3,"sources":["AppHelmet.tsx","AppGlobalStyles.tsx","styles/breakpoints.ts","styles/theme.ts","components/presentational/Banner.tsx","components/presentational/Navbar.tsx","components/presentational/Page/Image.tsx","components/presentational/Page/Textbox.tsx","components/presentational/Page/Page.tsx","components/presentational/Page/index.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["AppHelmet","href","rel","createGlobalStyle","size","mobile","tablet","desktop","colors","applyAlpha","color","alpha","theme","banner","background","border","textbox","links","About","hoverBackground","Books","Illustrations","Contact","StyledHeader","styled","header","props","_","breakpoints","StyledHeaderSlogan","div","imageUrl","Banner","config","image","url","StyledNavbar","StyledNavbarList","ul","StyledNavbarItem","li","StyledNavbarLink","name","StyledNavbarHighlighter","width","activeLink","title","left","Navbar","pathname","reduce","acc","link","index","route","length","getCurrentLinkConfig","useLocation","highlighterWidth","getHighlighterWidth","map","key","to","defaultProps","StyledImageFrame","StyledImage","LazyLoadImage","StyledClip","Clip","icon","faPaperclip","Image","console","log","fetch","then","response","blob","alt","height","effect","delayTime","src","placeholder","Loader","StyledTextbox","Textbox","body","StyledContainer","Container","PageItemContainer","PAGE_QUERY","gql","PageItem","__typename","Grid","Column","text","Page","useQuery","variables","id","loading","error","data","stackable","columns","Row","item","fragmentMatcher","IntrospectionFragmentMatcher","introspectionQueryResultData","cache","InMemoryCache","client","ApolloClient","uri","APP_STRUCTURE_QUERY","App","banners","path","exact","AppProvider","AppGlobalStyles","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.c31d0f33.chunk.js","sourcesContent":["import React from 'react';\nimport { Helmet } from 'react-helmet-async';\n\n\nconst AppHelmet = () =>  (\n    <Helmet>\n        <title>Cli Murphy Illustration</title>\n        <link href=\"https://fonts.googleapis.com/css2?family=Poiret+One&display=swap\" rel=\"stylesheet\"></link>\n        <link rel=\"stylesheet\" href=\"//cdn.jsdelivr.net/npm/semantic-ui@2.4.2/dist/semantic.min.css\" />\n    </Helmet>\n);\n\nexport default AppHelmet;\n","import { createGlobalStyle } from \"styled-components\";\n\nexport default createGlobalStyle`\n    html * {\n        font-family: 'Poiret One', cursive;\n    }\n\n    body {\n        margin: 0;\n    }\n\n    div {\n        height: auto;\n        width: 100%;\n    }\n\n    html,\n    body,\n    div,\n    span,\n    applet,\n    object,\n    iframe,\n    h1,\n    h2,\n    h3,\n    h4,\n    h5,\n    h6,\n    p,\n    blockquote,\n    pre,\n    a,\n    abbr,\n    acronym,\n    address,\n    big,\n    cite,\n    code,\n    del,\n    dfn,\n    em,\n    img,\n    ins,\n    kbd,\n    q,\n    s,\n    samp,\n    small,\n    strike,\n    strong,\n    sub,\n    sup,\n    tt,\n    var,\n    b,\n    u,\n    i,\n    center,\n    dl,\n    dt,\n    dd,\n    ol,\n    ul,\n    li,\n    fieldset,\n    form,\n    label,\n    legend,\n    table,\n    caption,\n    tbody,\n    tfoot,\n    thead,\n    tr,\n    th,\n    td,\n    article,\n    aside,\n    canvas,\n    details,\n    embed,\n    figure,\n    figcaption,\n    footer,\n    header,\n    hgroup,\n    menu,\n    nav,\n    output,\n    ruby,\n    section,\n    summary,\n    time,\n    mark,\n    audio,\n    video {\n        margin: 0;\n        padding: 0;\n        border: 0;\n        font-size: 100%;\n        font: inherit;\n        vertical-align: baseline;\n        font-family: 'Poiret One', cursive;\n        box-sizing: border-box;\n    }\n\n    /* HTML5 display-role reset for older browsers */\n\n    article,\n    aside,\n    details,\n    figcaption,\n    figure,\n    footer,\n    header,\n    hgroup,\n    menu,\n    nav,\n    section {\n        display: block;\n        font-family: 'Poiret One', cursive;\n    }\n\n    body {\n        line-height: 1;\n    }\n\n    ol,\n    ul {\n        list-style: none;\n    }\n\n    blockquote,\n    q {\n        quotes: none;\n    }\n\n    blockquote {\n        &:before,\n        &:after {\n            content: \"\";\n            content: none;\n        }\n    }\n\n    q {\n        &:before,\n        &:after {\n            content: \"\";\n            content: none;\n        }\n    }\n\n    table {\n        border-collapse: collapse;\n        border-spacing: 0;\n    }\n\n    h1 {\n        font-size: 36px;\n        line-height: 40px;\n    }\n\n    h2 {\n        font-size: 30px;\n        line-height: 40px;\n    }\n\n    h3 {\n        font-size: 24px;\n        line-height: 40px;\n    }\n\n    h4 {\n        font-size: 18px;\n        line-height: 20px;\n    }\n\n    /* Won't be used here */\n\n    h5 {\n        font-size: 14px;\n        line-height: 20px;\n    }\n\n    h6 {\n        font-size: 12px;\n        line-height: 20px;\n    }\n`;\n","const size = {\n\tmobile: \"320px\",\n\ttablet: \"768px\",\n\tdesktop: \"1024px\",\n};\n\nexport default {\n\tmobile: `(min-width: ${size.mobile})`,\n\ttablet: `(min-width: ${size.tablet})`,\n\tdesktop: `(min-width: ${size.desktop})`,\n};\n","const colors = {\n\twhite: \"#ffffff\",\n\tblack: \"#000000\",\n\tdarkGrey: \"#333333\",\n\tlightGrey: \"#DDDDDD\",\n\tred: \"#ff626e\",\n\tdarkRed: \"#8A0000\",\n\tdarkOrange: \"#ff7e4c\",\n\torange: \"#FFDAC1\",\n\tyellow: \"#FFFFD1\",\n\tlightGreen: \"#E2F0CB\",\n\tgreen: \"#B5EAD7\",\n\tdarkGreen: \"#77bb36\",\n    blue: \"#4db7ff\",\n    purple: '#EAD2FE',\n    darkPurple: '#9b23ff',\n};\n\nconst applyAlpha: (color: string, alpha: string) => string = (color, alpha) => `${color}${alpha}`;\n\nconst theme = {\n    banner: {\n        background: colors.white,\n        border: colors.darkPurple,\n    },\n    textbox: {\n        background: colors.yellow,\n    },\n    links: {\n        About: {\n            color: colors.red,\n            hoverBackground: applyAlpha(colors.red, '33'),\n        },\n        Books: {\n            color: colors.blue,\n            hoverBackground: applyAlpha(colors.blue, '33'),\n        },\n        Illustrations: {\n            color: colors.darkGreen,\n            hoverBackground: applyAlpha(colors.darkGreen, '33'),\n        },\n        Contact: {\n            color: colors.darkOrange,\n            hoverBackground: applyAlpha(colors.darkOrange, '33'),\n        }\n    },\n};\n\nexport default theme;","import * as React from 'react';\nimport styled from 'styled-components';\nimport * as _ from 'lodash';\n\nimport { breakpoints } from \"../../styles\";\n\ninterface BannerProps {\n    config: any;\n};\n\ninterface BannerSloganProps {\n    imageUrl: string;\n};\n\nconst StyledHeader = styled.header`\n    display: flex;\n    padding: 8px;\n    font-size: 32px;\n    text-align: center;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n    background-color: ${props => _.get(props.theme, 'banner.background')};\n    border-bottom: 2px dashed ${props => _.get(props.theme, 'banner.border')};\n\n\t@media ${breakpoints.tablet} {\n\t\tfont-size: 32px;\n\t}\n`;\n\nconst StyledHeaderSlogan = styled.div<BannerSloganProps>`\n    height: 200px;\n    width: 200px;\n    background-image: ${props => `url(${props.imageUrl})`};\n\tbackground-size: contain;\n\tbackground-repeat: no-repeat;\n\tbackground-position: 50% 50%;\n`;\n\nconst Banner: React.FC<BannerProps> = ({\n    config\n}) => (\n    <StyledHeader>\n        <StyledHeaderSlogan imageUrl={config.image.url} />\n    </StyledHeader>\n);\n\nexport default Banner;\n","import * as React from 'react';\nimport styled from 'styled-components';\nimport * as _ from 'lodash';\nimport { Link, useLocation } from 'react-router-dom';\n\ninterface NavbarLink {\n    route: string;\n    title: string;\n    left?: string;\n}\n\ninterface NavbarProps {\n    links: Array<NavbarLink>;\n};\n\ninterface StyledLinkProps {\n    name: string;\n}\n\ninterface StyledHighlighterProps {\n    width: string;\n    activeLink: NavbarLink;\n}\n\nconst StyledNavbar = styled.div`\n    display: flex;\n    margin-top: 16px;\n    justify-content: center;\n    align-items: center;\n    overflow: hidden; \n`;\n\nconst StyledNavbarList = styled.ul`\n    position: relative;\n    display: flex;\n    max-width: 400px;\n    width: 100%;\n    justify-content: center;\n`;\n\nconst StyledNavbarItem = styled.li`\n    display: flex;\n    width: 100%;\n    height: 100%;\n    font-size: 18px;\n`;\n\nconst StyledNavbarLink = styled.div<StyledLinkProps>`\n    width: 100%;\n    height: 100%;\n\n    &:hover {\n        background-color: ${props => _.get(props, `theme.links.${props.name}.hoverBackground`)};\n    }\n\n    a {\n        display: flex;\n        height: 100%;\n        width: 100%;\n        padding-top: 8px;\n        padding-bottom: 16px;\n        text-decoration: none;\n        justify-content: center;\n        font-weight: 900;\n        color: ${props => _.get(props, `theme.links.${props.name}.color`)};\n    }\n`;\n\nconst StyledNavbarHighlighter = styled.div<StyledHighlighterProps>`\n    position: absolute;\n    width: ${props => props.width};\n    height: 2px;\n    border-bottom: 2px solid;\n    border-color: ${props => _.get(props, `theme.links.${props.activeLink.title}.color`)};\n    bottom: 0;\n    left: ${props => props.activeLink.left};\n    transition: all 400ms cubic-bezier(0.175, 0.885, 0.32, 1.275);\n`;\n\nconst getCurrentLinkConfig = (links: Array<NavbarLink>, pathname: string): NavbarLink => \n    links.reduce((acc, link, index) => {\n        if (link.route === pathname) {\n            const left = index * 100 / links.length;\n            return {\n                ...link,\n                left: `${left}%`\n            };\n        }\n        return acc;\n    }, {\n        title: '',\n        route: '',\n        left: '0%'\n    });\nconst getHighlighterWidth = (links: Array<NavbarLink>) => `${100 / links.length}%`;\n\nfunction Navbar(props: NavbarProps ) {\n    const { links } = props;\n    const location = useLocation();\n    const activeLink: NavbarLink = getCurrentLinkConfig(links, location.pathname);\n    const highlighterWidth = getHighlighterWidth(links);\n\n    return (\n        <StyledNavbar>\n            <StyledNavbarList>\n                {links.map(({title, route}, index) => (\n                    <StyledNavbarItem key={index}>\n                        <StyledNavbarLink name={title}>\n                            <Link to={route}>\n                                {title}\n                            </Link>\n                        </StyledNavbarLink>\n                    </StyledNavbarItem>\n                ))}\n                <StyledNavbarHighlighter width={highlighterWidth} activeLink={activeLink} />\n            </StyledNavbarList>\n        </StyledNavbar>\n    );\n}\n\nNavbar.defaultProps = {\n    links: [],\n};\n\nexport default Navbar;","import * as React from \"react\";\nimport styled from \"styled-components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPaperclip } from \"@fortawesome/free-solid-svg-icons\";\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\nimport { Loader } from 'semantic-ui-react';\nimport 'react-lazy-load-image-component/src/effects/blur.css';\n\ninterface ImageProps {\n\turl?: string;\n\tname: string;\n}\n\nconst StyledImageFrame = styled.div`\n\tposition: relative;\n\tdisplay: inline-flex;\n\tflex-shrink: 0;\n\tbox-sizing: border-box;\n\theight: 300px;\n\twidth: 270px;\n\tmargin: 16px;\n\tpadding: 12px;\n\tpadding-bottom: 48px;\n\tbackground-color: white;\n\tborder: 1px solid #ccc;\n\tbox-shadow: rgba(0,0,0,0.22) 4px 4px 0px 0px;\n\ttransform: rotate(1deg);\n`;\n\nconst StyledImage = styled(LazyLoadImage)`\n\tobject-fit: cover;\n\tborder: 1px solid #ccc;\n`;\n\nconst StyledClip = styled.div`\n\tposition: absolute;\n\ttop: -24px;\n\tleft: -24px;\n\tfont-size: 48px;\n\theight: 48px;\n\twidth: 48px;\n\tcolor: #ccc;\n`;\n\nconst Clip = () => (\n\t<StyledClip>\n\t\t<FontAwesomeIcon icon={faPaperclip} />\n\t</StyledClip>\n);\n\nfunction Image(props: ImageProps) {\n\tconst { url, name } = props;\n\tconsole.log(url);\n\n\tfetch('https://media.graphcms.com/F5xO5PuUSxm5J7teaKPt')\n\t\t.then(response => response.blob()\n\t\t\t.then(blob => console.log(blob))\n\t\t);\n\n\treturn (\n\t\t<StyledImageFrame>\n\t\t\t<StyledImage\n\t\t\t\talt={name}\n\t\t\t\theight={'100%'}\n\t\t\t\twidth={'100%'}\n\t\t\t\teffect=\"blur\"\n\t\t\t\tdelayTime={1000}\n\t\t\t\tsrc={url}\n\t\t\t\tplaceholder={<Loader />}\n\t\t\t/>\n\t\t\t<Clip />\n\t\t</StyledImageFrame>\n\t);\n  }\n\nexport default Image;\n","import * as React from \"react\";\nimport styled from \"styled-components\";\n\nimport { breakpoints } from '../../../styles';\n\ninterface ImageProps {\n\ttitle: string;\n\tbody: string;\n}\n\nconst StyledTextbox = styled.div`\n\tdisplay: flex;\n\tpadding: 16px;\n\tflex-direction: column;\n\tbackground: ${props => props.theme.textbox.background};\n\tbox-shadow: rgba(0,0,0,0.22) 2px 2px 0px 0px;\n\tborder: 1px solid #ccc;\n\tmargin: 16px 0;\n\ttransform: rotate(-0.2deg);\n\n\t@media ${breakpoints.tablet} {\n\t\tmargin: 0;\n\t}\n`;\n\nconst Textbox: React.FC<ImageProps> = ({ title, body }) => (\n\t<StyledTextbox>\n\t\t<h2>{title}</h2>\n\t\t<p>{body}</p>\n\t</StyledTextbox>\n);\n\nexport default Textbox;\n","import * as React from \"react\";\nimport * as _ from \"lodash\";\nimport styled from \"styled-components\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\nimport { Container, Grid, Loader } from \"semantic-ui-react\";\n\nimport Image from \"./Image\";\nimport Textbox from \"./Textbox\";\n\ninterface PageProps {\n  link: any;\n}\n\ninterface PageItemProps {\n  config: any;\n}\n\nconst StyledContainer = styled(Container)`\n  margin: 32px 0;\n`;\n\nconst PageItemContainer = styled.div`\n  display: flex;\n  height: 100%;\n  width: 100%;\n  padding: 0 16px;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst PAGE_QUERY = gql`\n  query GetPageContentByLinkId($id: ID!) {\n    links(where: { id: $id }) {\n      id\n      title\n      page {\n        title\n        body {\n          ... on Image {\n            title\n            image {\n              url\n            }\n          }\n          ... on Textbox {\n            title\n            body {\n              text\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nfunction PageItem(props: PageItemProps) {\n  const { config } = props;\n\n  if (config.__typename === \"Image\") {\n    return (\n      <Grid.Column>\n        <PageItemContainer>\n          <Image name={config.title} url={config.image.url} />\n        </PageItemContainer>\n      </Grid.Column>\n    );\n  } else if (config.__typename === \"Textbox\") {\n    return (\n      <Grid.Column width={8}>\n        <PageItemContainer>\n          <Textbox title={config.title} body={config.body.text} />\n        </PageItemContainer>\n      </Grid.Column>\n    );\n  }\n\n  return null;\n}\n\nfunction Page(props: PageProps) {\n  const { link } = props;\n  const { loading, error, data } = useQuery(PAGE_QUERY, {\n    variables: {\n      id: link.id,\n    },\n  });\n\n  const page = _.get(data, \"links[0].page\") || {};\n  const body = page.body || [];\n\n  return (\n    <StyledContainer>\n      <Grid stackable columns={3}>\n        <Grid.Row>\n          {loading && <Loader />}\n          {error && <p>Error :(</p>}\n          {!loading &&\n            !error &&\n            body.map((item: any, index: number) => (\n              <PageItem key={index} config={item} />\n            ))}\n        </Grid.Row>\n      </Grid>\n    </StyledContainer>\n  );\n}\n\nexport default Page;\n","import Page from './Page';\n\nexport default Page;\n","import React from \"react\";\nimport { ThemeProvider } from \"styled-components\";\nimport { HelmetProvider } from \"react-helmet-async\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport { ApolloProvider, useQuery } from \"@apollo/react-hooks\";\n\nimport AppHelmet from \"./AppHelmet\";\nimport AppGlobalStyles from \"./AppGlobalStyles\";\nimport { Banner, Navbar, Page } from \"./components/presentational\";\nimport { theme } from \"./styles\";\nimport ApolloClient, { gql } from \"apollo-boost\";\nimport { IntrospectionFragmentMatcher, InMemoryCache } from 'apollo-cache-inmemory';\nimport introspectionQueryResultData from './fragmentTypes.json';\n\nconst fragmentMatcher = new IntrospectionFragmentMatcher({\n  \tintrospectionQueryResultData\n});\nconst cache = new InMemoryCache({ fragmentMatcher });\n\nconst client = new ApolloClient({\n\tcache,\n\turi:\n\t\t\"https://api-eu-central-1.graphcms.com/v2/ckbooav750jy301yz2jyr4idd/master\",\n});\n\nconst APP_STRUCTURE_QUERY = gql`\n\t{\n\t\tbanners {\n\t\t\ttitle\n\t\t\timage {\n\t\t\t\turl\n\t\t\t}\n\t\t}\n\t\tlinks {\n\t\t\tid\n\t\t\ttitle\n\t\t\troute\n\t\t}\n\t}\n`;\n\nfunction App() {\n\tconst { loading, error, data } = useQuery(APP_STRUCTURE_QUERY);\n\n\tif (loading) return <p>Loading...</p>;\n\tif (error) return <p>Error :(</p>;\n\n\tconst { banners, links } = data;\n\n\treturn (\n\t\t<Router>\n\t\t\t<Banner config={banners[0]} />\n\t\t\t<Navbar links={links} />\n\t\t\t{links.map((link: any) => (\n\t\t\t\t<Route\n\t\t\t\t\tkey={link.route}\n\t\t\t\t\tpath={link.route}\n\t\t\t\t\texact={link.route === \"/\"}\n\t\t\t\t>\n\t\t\t\t\t<Page link={link} />\n\t\t\t\t</Route>\n\t\t\t))}\n\t\t</Router>\n\t);\n}\n\nfunction AppProvider() {\n\treturn (\n\t\t<ApolloProvider client={client}>\n\t\t\t<ThemeProvider theme={theme}>\n\t\t\t\t<HelmetProvider>\n\t\t\t\t\t<AppHelmet />\n\t\t\t\t</HelmetProvider>\n\t\t\t\t<AppGlobalStyles />\n\t\t\t\t<App />\n\t\t\t</ThemeProvider>\n\t\t</ApolloProvider>\n\t);\n}\n\nexport default AppProvider;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}